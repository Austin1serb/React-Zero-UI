name: Release

on:
  workflow_dispatch:   # manual ‚ÄúRun workflow‚Äù

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 1 ‚ñ∏ Checkout the branch you chose in the UI (default = main)
      - uses: actions/checkout@v4

      # 2 ‚ñ∏ Ensure the latest CI on this branch passed
      - name: Check CI status
        run: |
          CI_STATUS=$(gh run list \
            --workflow=ci.yml \
            --branch=${{ github.ref_name }} \
            --limit=1 \
            --json conclusion \
            --jq '.[0].conclusion')

          if [[ "$CI_STATUS" != "success" ]]; then
            echo "‚ùå CI must pass before releasing. Current status: $CI_STATUS"
            exit 1
          fi
          echo "‚úÖ CI passed. Proceeding with release‚Ä¶"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 3 ‚ñ∏ Calculate tags / CHANGELOG with release-please
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json      # your config
          manifest-file: .release-please-manifest.json  # version manifest

      # 4 ‚ñ∏ Only continue if at least one package was released
      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created == 'true' }}
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created == 'true' }}
        run: |
          corepack enable
          pnpm install --frozen-lockfile

      # 5 ‚ñ∏ Publish each released workspace package
      - name: Publish packages
        if: ${{ steps.release.outputs.release_created == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "‚ÑπÔ∏è  Packages flagged for publish:"
          echo "‚Ä¢ core ‚Üí ${{ steps.release.outputs['packages/core--release_version'] }}"
          echo "‚Ä¢ cli  ‚Üí ${{ steps.release.outputs['packages/cli--release_version'] }}"

          if [[ '${{ steps.release.outputs['packages/core--release_created'] }}' == 'true' ]]; then
            echo "üì¶ Publishing @react-zero-ui/core‚Ä¶"
            cd packages/core
            npm publish --access public
            cd ../..
          fi

          if [[ '${{ steps.release.outputs['packages/cli--release_created'] }}' == 'true' ]]; then
            echo "üì¶ Publishing create-zero-ui‚Ä¶"
            cd packages/cli
            npm publish --access public
            cd ../..
          fi
